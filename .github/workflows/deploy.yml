name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      deployments: write

    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK v21 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: resources 디렉토리 생성
        run: mkdir -p ./src/main/resources

      - name: application.yml 파일 만들기
        run: echo '${{ secrets.APPLICATION_PROPERTIES }}' > ./src/main/resources/application.yml

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: Docker hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: DockerHub에 빌드 및 배포
        env:
          NAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REPO: it-moji-api-server
        run: |
          docker build -t $REPO .
          docker tag $REPO:latest $NAME/$REPO:latest
          docker push $NAME/$REPO:latest

      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ${{ secrets.DEV_EC2_USERNAME }}
          key: ${{ secrets.DEV_EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd /home/ec2-user/app
            wget -O docker-compose.yml https://raw.githubusercontent.com/Atractorrr/Attraction-Server/dev/docker-compose.yml
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            # docker-compose 명령 실행
            docker-compose down || true  
            docker-compose pull
            docker-compose up -d
